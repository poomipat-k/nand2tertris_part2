function Screen.init 2
    push constant 1
    neg
    pop static 0
    push constant 16384
    pop static 1
    push constant 16
    call Array.new 1
    pop static 2
    push constant 16
    call Array.new 1
    pop static 3
    push constant 16
    call Array.new 1
    pop static 4
    push constant 0
    push static 2
    add
    push constant 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 0
    push static 3
    add
    push constant 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 0
    push static 4
    add
    push constant 1
    neg
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    pop local 0
    push constant 1
    pop local 1
label Screen_0
    push local 0
    push constant 16
    lt
    not
    if-goto Screen_1
    push local 1
    push local 1
    add
    pop local 1
    push local 0
    push static 2
    add
    push local 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 0
    push static 3
    add
    push local 0
    push constant 1
    sub
    push static 3
    add
    pop pointer 1
    push that 0
    push local 1
    add
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 0
    push static 4
    add
    push local 0
    push constant 1
    sub
    push static 4
    add
    pop pointer 1
    push that 0
    push constant 2
    call Math.multiply 2
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 0
    push constant 1
    add
    pop local 0
    goto Screen_0
label Screen_1
    push constant 0
    return
function Screen.clearScreen 1
    push constant 0
    pop local 0
label Screen_2
    push local 0
    push constant 8192
    lt
    not
    if-goto Screen_3
    push static 1
    push local 0
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 1
    add
    pop local 0
    goto Screen_2
label Screen_3
    push constant 0
    return
function Screen.setColor 0
    push argument 0
    pop static 0
    push constant 0
    return
function Screen.drawPixel 3
    push argument 0
    push constant 0
    lt
    push argument 1
    push constant 0
    lt
    or
    not
    if-goto Screen_5
    push constant 7
    call Sys.error 1
    pop temp 0
    goto Screen_4
label Screen_5
label Screen_4
    push constant 32
    push argument 1
    call Math.multiply 2
    push argument 0
    push constant 16
    call Math.divide 2
    add
    pop local 0
    push static 1
    push local 0
    add
    call Memory.peek 1
    pop local 2
    push argument 0
    push constant 1
    and
    push argument 0
    push constant 2
    and
    add
    push argument 0
    push constant 4
    and
    add
    push argument 0
    push constant 8
    and
    add
    pop local 1
    push static 0
    not
    if-goto Screen_7
    push local 2
    push local 1
    call Screen.bit 2
    not
    not
    if-goto Screen_9
    push local 2
    push local 1
    push static 2
    add
    pop pointer 1
    push that 0
    add
    pop local 2
    goto Screen_8
label Screen_9
label Screen_8
    goto Screen_6
label Screen_7
    push local 2
    push local 1
    call Screen.bit 2
    not
    if-goto Screen_11
    push local 2
    push local 1
    push static 2
    add
    pop pointer 1
    push that 0
    sub
    pop local 2
    goto Screen_10
label Screen_11
label Screen_10
label Screen_6
    push static 1
    push local 0
    add
    push local 2
    call Memory.poke 2
    pop temp 0
    push constant 0
    return
function Screen.drawLine 8
    push argument 0
    push constant 0
    lt
    push argument 1
    push constant 0
    lt
    or
    push argument 2
    push constant 0
    lt
    or
    push argument 3
    push constant 0
    lt
    or
    not
    if-goto Screen_13
    push constant 8
    call Sys.error 1
    pop temp 0
    goto Screen_12
label Screen_13
label Screen_12
    push argument 2
    push argument 0
    sub
    pop local 0
    push argument 3
    push argument 1
    sub
    pop local 1
    push constant 0
    pop local 2
    push constant 0
    pop local 3
    push constant 0
    pop local 4
    push local 0
    push constant 0
    eq
    push local 1
    push constant 0
    eq
    and
    not
    if-goto Screen_15
    push constant 0
    return
    goto Screen_14
label Screen_15
label Screen_14
    push local 0
    push constant 0
    eq
    not
    if-goto Screen_17
    push argument 3
    push argument 1
    gt
    not
    if-goto Screen_19
label Screen_20
    push argument 3
    push argument 1
    gt
    not
    if-goto Screen_21
    push argument 0
    push argument 1
    call Screen.drawPixel 2
    pop temp 0
    push argument 1
    push constant 1
    add
    pop argument 1
    goto Screen_20
label Screen_21
    goto Screen_18
label Screen_19
label Screen_22
    push argument 3
    push argument 1
    lt
    not
    if-goto Screen_23
    push argument 0
    push argument 1
    call Screen.drawPixel 2
    pop temp 0
    push argument 1
    push constant 1
    sub
    pop argument 1
    goto Screen_22
label Screen_23
label Screen_18
    push constant 0
    return
    goto Screen_16
label Screen_17
label Screen_16
    push local 1
    push constant 0
    eq
    not
    if-goto Screen_25
    push argument 0
    push argument 2
    push argument 1
    call Screen.drawHorizontalLine 3
    pop temp 0
    push constant 0
    return
    goto Screen_24
label Screen_25
label Screen_24
    push constant 0
    pop local 7
    push local 0
    push constant 0
    gt
    not
    if-goto Screen_27
    push local 1
    push constant 0
    lt
    not
    if-goto Screen_29
    push constant 1
    pop local 7
    goto Screen_28
label Screen_29
    push constant 2
    pop local 7
label Screen_28
    goto Screen_26
label Screen_27
    push local 1
    push constant 0
    gt
    not
    if-goto Screen_31
    push constant 3
    pop local 7
    goto Screen_30
label Screen_31
    push constant 4
    pop local 7
label Screen_30
label Screen_26
    push local 0
    call Math.abs 1
    pop local 5
    push local 1
    call Math.abs 1
    pop local 6
label Screen_32
    push local 2
    push local 5
    gt
    not
    push local 3
    push local 6
    gt
    not
    and
    not
    if-goto Screen_33
    push local 7
    push constant 1
    eq
    not
    if-goto Screen_35
    push argument 0
    push local 2
    add
    push argument 1
    push local 3
    sub
    call Screen.drawPixel 2
    pop temp 0
    goto Screen_34
label Screen_35
label Screen_34
    push local 7
    push constant 2
    eq
    not
    if-goto Screen_37
    push argument 0
    push local 2
    add
    push argument 1
    push local 3
    add
    call Screen.drawPixel 2
    pop temp 0
    goto Screen_36
label Screen_37
label Screen_36
    push local 7
    push constant 3
    eq
    not
    if-goto Screen_39
    push argument 0
    push local 2
    sub
    push argument 1
    push local 3
    add
    call Screen.drawPixel 2
    pop temp 0
    goto Screen_38
label Screen_39
label Screen_38
    push local 7
    push constant 4
    eq
    not
    if-goto Screen_41
    push argument 0
    push local 2
    sub
    push argument 1
    push local 3
    sub
    call Screen.drawPixel 2
    pop temp 0
    goto Screen_40
label Screen_41
label Screen_40
    push local 4
    push constant 0
    lt
    not
    if-goto Screen_43
    push local 2
    push constant 1
    add
    pop local 2
    push local 4
    push local 6
    add
    pop local 4
    goto Screen_42
label Screen_43
    push local 3
    push constant 1
    add
    pop local 3
    push local 4
    push local 5
    sub
    pop local 4
label Screen_42
    goto Screen_32
label Screen_33
    push constant 0
    return
function Screen.drawHorizontalLine 8
    push argument 0
    push argument 1
    gt
    not
    if-goto Screen_45
    push argument 1
    pop local 0
    push argument 0
    pop argument 1
    push local 0
    pop argument 0
    goto Screen_44
label Screen_45
label Screen_44
    push argument 0
    push constant 16
    call Math.divide 2
    pop local 2
    push argument 1
    push constant 16
    call Math.divide 2
    pop local 3
    push local 3
    push local 2
    sub
    push constant 1
    add
    pop local 4
    push local 4
    push constant 1
    eq
    not
    if-goto Screen_47
    push constant 32
    push argument 2
    call Math.multiply 2
    push local 2
    add
    pop local 5
    push static 1
    push local 5
    add
    call Memory.peek 1
    pop local 6
    push argument 0
    call Screen.mod16 1
    pop local 0
    push argument 1
    call Screen.mod16 1
    pop local 1
label Screen_48
    push local 0
    push local 1
    gt
    not
    not
    if-goto Screen_49
    push static 0
    not
    if-goto Screen_51
    push local 6
    push local 0
    push static 2
    add
    pop pointer 1
    push that 0
    or
    pop local 6
    goto Screen_50
label Screen_51
    push local 6
    push local 0
    push static 2
    add
    pop pointer 1
    push that 0
    and
    push local 0
    push static 2
    add
    pop pointer 1
    push that 0
    eq
    not
    if-goto Screen_53
    push local 6
    push local 0
    push static 2
    add
    pop pointer 1
    push that 0
    sub
    pop local 6
    goto Screen_52
label Screen_53
label Screen_52
label Screen_50
    push local 0
    push constant 1
    add
    pop local 0
    goto Screen_48
label Screen_49
    push static 1
    push local 5
    add
    push local 6
    call Memory.poke 2
    pop temp 0
    push constant 0
    return
    goto Screen_46
label Screen_47
label Screen_46
    push local 4
    push constant 2
    eq
    not
    if-goto Screen_55
    push argument 0
    push argument 2
    push local 2
    call Screen.fillLeftBlock 3
    pop temp 0
    push argument 1
    push argument 2
    push local 3
    call Screen.fillRightBlock 3
    pop temp 0
    push constant 0
    return
    goto Screen_54
label Screen_55
label Screen_54
    push argument 0
    push argument 2
    push local 2
    call Screen.fillLeftBlock 3
    pop temp 0
    push local 2
    push constant 1
    add
    pop local 2
label Screen_56
    push local 2
    push local 3
    lt
    not
    if-goto Screen_57
    push constant 32
    push argument 2
    call Math.multiply 2
    push local 2
    add
    pop local 5
    push static 0
    not
    if-goto Screen_59
    push static 1
    push local 5
    add
    push constant 1
    neg
    call Memory.poke 2
    pop temp 0
    goto Screen_58
label Screen_59
    push static 1
    push local 5
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
label Screen_58
    push local 2
    push constant 1
    add
    pop local 2
    goto Screen_56
label Screen_57
    push argument 1
    push argument 2
    push local 3
    call Screen.fillRightBlock 3
    pop temp 0
    push constant 0
    return
function Screen.fillLeftBlock 3
    push constant 32
    push argument 1
    call Math.multiply 2
    push argument 2
    add
    pop local 0
    push static 1
    push local 0
    add
    call Memory.peek 1
    pop local 1
    push argument 0
    call Screen.mod16 1
    pop local 2
    push static 0
    not
    if-goto Screen_61
    push local 1
    push local 2
    push static 4
    add
    pop pointer 1
    push that 0
    or
    pop local 1
    goto Screen_60
label Screen_61
    push local 1
    push local 2
    push static 3
    add
    pop pointer 1
    push that 0
    and
    pop local 1
label Screen_60
    push static 1
    push local 0
    add
    push local 1
    call Memory.poke 2
    pop temp 0
    push constant 0
    return
function Screen.fillRightBlock 3
    push constant 32
    push argument 1
    call Math.multiply 2
    push argument 2
    add
    pop local 0
    push static 1
    push local 0
    add
    call Memory.peek 1
    pop local 1
    push argument 0
    call Screen.mod16 1
    pop local 2
    push static 0
    not
    if-goto Screen_63
    push local 1
    push local 2
    push static 3
    add
    pop pointer 1
    push that 0
    or
    pop local 1
    goto Screen_62
label Screen_63
    push local 1
    push local 2
    push static 4
    add
    pop pointer 1
    push that 0
    and
    pop local 1
label Screen_62
    push static 1
    push local 0
    add
    push local 1
    call Memory.poke 2
    pop temp 0
    push constant 0
    return
function Screen.mod16 0
    push argument 0
    push constant 1
    and
    push argument 0
    push constant 2
    and
    add
    push argument 0
    push constant 4
    and
    add
    push argument 0
    push constant 8
    and
    add
    return
function Screen.drawRectangle 1
    push argument 0
    push constant 0
    lt
    push argument 1
    push constant 0
    lt
    or
    push argument 2
    push constant 0
    lt
    or
    push argument 3
    push constant 0
    lt
    or
    push argument 0
    push argument 2
    eq
    or
    push argument 1
    push argument 3
    eq
    or
    not
    if-goto Screen_65
    push constant 9
    call Sys.error 1
    pop temp 0
    goto Screen_64
label Screen_65
label Screen_64
    push argument 0
    push argument 2
    gt
    not
    if-goto Screen_67
    push argument 0
    pop local 0
    push argument 2
    pop argument 0
    push local 0
    pop argument 2
    goto Screen_66
label Screen_67
label Screen_66
    push argument 1
    push argument 3
    gt
    not
    if-goto Screen_69
    push argument 1
    pop local 0
    push argument 3
    pop argument 1
    push local 0
    pop argument 3
    goto Screen_68
label Screen_69
label Screen_68
label Screen_70
    push argument 1
    push argument 3
    gt
    not
    not
    if-goto Screen_71
    push argument 0
    push argument 2
    push argument 1
    call Screen.drawHorizontalLine 3
    pop temp 0
    push argument 1
    push constant 1
    add
    pop argument 1
    goto Screen_70
label Screen_71
    push constant 0
    return
function Screen.drawCircle 2
    push argument 0
    push constant 0
    lt
    push argument 1
    push constant 0
    lt
    or
    not
    if-goto Screen_73
    push constant 12
    call Sys.error 1
    pop temp 0
    goto Screen_72
label Screen_73
label Screen_72
    push argument 2
    push constant 0
    lt
    push argument 2
    push constant 181
    gt
    or
    push argument 0
    push argument 2
    sub
    push constant 0
    lt
    or
    push argument 0
    push argument 2
    add
    push constant 511
    gt
    or
    push argument 1
    push argument 2
    sub
    push constant 0
    lt
    or
    push argument 1
    push argument 2
    add
    push constant 255
    gt
    or
    not
    if-goto Screen_75
    push constant 13
    call Sys.error 1
    pop temp 0
    goto Screen_74
label Screen_75
label Screen_74
    push argument 2
    neg
    pop local 0
label Screen_76
    push local 0
    push argument 2
    lt
    not
    if-goto Screen_77
    push argument 2
    push argument 2
    call Math.multiply 2
    push local 0
    push local 0
    call Math.multiply 2
    sub
    call Math.sqrt 1
    pop local 1
    push argument 0
    push local 1
    sub
    push argument 1
    push local 0
    add
    push argument 0
    push local 1
    add
    push argument 1
    push local 0
    add
    call Screen.drawLine 4
    pop temp 0
    push local 0
    push constant 1
    add
    pop local 0
    goto Screen_76
label Screen_77
    push constant 0
    return
function Screen.bit 0
    push argument 0
    push argument 1
    push static 2
    add
    pop pointer 1
    push that 0
    and
    push argument 1
    push static 2
    add
    pop pointer 1
    push that 0
    eq
    return